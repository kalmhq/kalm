
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: components.core.kalm.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.workloadType
    name: Workload
    type: string
  - JSONPath: .spec.image
    name: Image
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .spec.replicas
    name: Scale
    type: integer
  group: core.kalm.dev
  names:
    kind: Component
    listKind: ComponentList
    plural: components
    singular: component
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.selector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      description: Component is the Schema for the components API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ComponentSpec defines the desired state of Component
          properties:
            Annotations:
              additionalProperties:
                type: string
              description: annotations will add to pods
              type: object
            command:
              type: string
            dnsPolicy:
              description: DNSPolicy defines how a pod's DNS will be configured.
              enum:
              - ClusterFirstWithHostNet
              - ClusterFirst
              - Default
              - None
              type: string
            enableHeadlessService:
              type: boolean
            env:
              items:
                description: EnvVar represents an environment variable present in
                  a Container.
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    minLength: 1
                    type: string
                  prefix:
                    type: string
                  suffix:
                    type: string
                  type:
                    enum:
                    - static
                    - external
                    - linked
                    - fieldref
                    - builtin
                    type: string
                  value:
                    type: string
                required:
                - name
                type: object
              type: array
            image:
              minLength: 1
              type: string
            immediateTrigger:
              description: This is only meaningful if this component is a cronjob
                workload. Controller should immediately trigger a job and set its
                value to false if it's true.
              type: boolean
            istioResourceRequirements:
              description: ResourceRequirements describes the compute resource requirements.
              properties:
                limits:
                  additionalProperties:
                    type: string
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    type: string
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            labels:
              additionalProperties:
                type: string
              description: labels will add to pods
              type: object
            livenessProbe:
              description: Probe describes a health check to be performed against
                a container to determine whether it is alive or ready to receive traffic.
              properties:
                exec:
                  description: One and only one of the following should be specified.
                    Exec specifies the action to take.
                  properties:
                    command:
                      description: Command is the command line to execute inside the
                        container, the working directory for the command  is root
                        ('/') in the container's filesystem. The command is simply
                        exec'd, it is not run inside a shell, so traditional shell
                        instructions ('|', etc) won't work. To use a shell, you need
                        to explicitly call out to that shell. Exit status of 0 is
                        treated as live/healthy and non-zero is unhealthy.
                      items:
                        type: string
                      type: array
                  type: object
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  format: int32
                  type: integer
                httpGet:
                  description: HTTPGet specifies the http request to perform.
                  properties:
                    host:
                      description: Host name to connect to, defaults to the pod IP.
                        You probably want to set "Host" in httpHeaders instead.
                      type: string
                    httpHeaders:
                      description: Custom headers to set in the request. HTTP allows
                        repeated headers.
                      items:
                        description: HTTPHeader describes a custom header to be used
                          in HTTP probes
                        properties:
                          name:
                            description: The header field name
                            type: string
                          value:
                            description: The header field value
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    path:
                      description: Path to access on the HTTP server.
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to access on the container.
                        Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                      x-kubernetes-int-or-string: true
                    scheme:
                      description: Scheme to use for connecting to the host. Defaults
                        to HTTP.
                      type: string
                  required:
                  - port
                  type: object
                initialDelaySeconds:
                  description: 'Number of seconds after the container has started
                    before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                  format: int32
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  format: int32
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness
                    and startup. Minimum value is 1.
                  format: int32
                  type: integer
                tcpSocket:
                  description: 'TCPSocket specifies an action involving a TCP port.
                    TCP hooks not yet supported TODO: implement a realistic TCP lifecycle
                    hook'
                  properties:
                    host:
                      description: 'Optional: Host name to connect to, defaults to
                        the pod IP.'
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Number or name of the port to access on the container.
                        Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                      x-kubernetes-int-or-string: true
                  required:
                  - port
                  type: object
                timeoutSeconds:
                  description: 'Number of seconds after which the probe times out.
                    Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                  format: int32
                  type: integer
              type: object
            nodeSelectorLabels:
              additionalProperties:
                type: string
              type: object
            ports:
              items:
                properties:
                  containerPort:
                    format: int32
                    maximum: 65535
                    minimum: 1
                    type: integer
                  protocol:
                    allOf:
                    - enum:
                      - http
                      - https
                      - http2
                      - grpc
                      - grpc-web
                      - tcp
                      - udp
                      - unknown
                    - enum:
                      - http
                      - https
                      - http2
                      - grpc
                      - grpc-web
                      - tcp
                      - udp
                      - unknown
                    type: string
                  servicePort:
                    description: port for service
                    format: int32
                    maximum: 65535
                    minimum: 1
                    type: integer
                required:
                - containerPort
                - protocol
                type: object
              type: array
            preInjectedFiles:
              items:
                properties:
                  base64:
                    description: To support binary content, it allows set base64 encoded
                      data into `Content` field and set this flag to `true`. Binary
                      data will be restored instead of plain string in `Content`.
                    type: boolean
                  content:
                    description: the content of the file
                    minLength: 1
                    type: string
                  mountPath:
                    minLength: 1
                    type: string
                  readonly:
                    type: boolean
                  runnable:
                    type: boolean
                required:
                - content
                - mountPath
                - runnable
                type: object
              type: array
            preferNotCoLocated:
              type: boolean
            readinessProbe:
              description: Probe describes a health check to be performed against
                a container to determine whether it is alive or ready to receive traffic.
              properties:
                exec:
                  description: One and only one of the following should be specified.
                    Exec specifies the action to take.
                  properties:
                    command:
                      description: Command is the command line to execute inside the
                        container, the working directory for the command  is root
                        ('/') in the container's filesystem. The command is simply
                        exec'd, it is not run inside a shell, so traditional shell
                        instructions ('|', etc) won't work. To use a shell, you need
                        to explicitly call out to that shell. Exit status of 0 is
                        treated as live/healthy and non-zero is unhealthy.
                      items:
                        type: string
                      type: array
                  type: object
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  format: int32
                  type: integer
                httpGet:
                  description: HTTPGet specifies the http request to perform.
                  properties:
                    host:
                      description: Host name to connect to, defaults to the pod IP.
                        You probably want to set "Host" in httpHeaders instead.
                      type: string
                    httpHeaders:
                      description: Custom headers to set in the request. HTTP allows
                        repeated headers.
                      items:
                        description: HTTPHeader describes a custom header to be used
                          in HTTP probes
                        properties:
                          name:
                            description: The header field name
                            type: string
                          value:
                            description: The header field value
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    path:
                      description: Path to access on the HTTP server.
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to access on the container.
                        Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                      x-kubernetes-int-or-string: true
                    scheme:
                      description: Scheme to use for connecting to the host. Defaults
                        to HTTP.
                      type: string
                  required:
                  - port
                  type: object
                initialDelaySeconds:
                  description: 'Number of seconds after the container has started
                    before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                  format: int32
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  format: int32
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness
                    and startup. Minimum value is 1.
                  format: int32
                  type: integer
                tcpSocket:
                  description: 'TCPSocket specifies an action involving a TCP port.
                    TCP hooks not yet supported TODO: implement a realistic TCP lifecycle
                    hook'
                  properties:
                    host:
                      description: 'Optional: Host name to connect to, defaults to
                        the pod IP.'
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Number or name of the port to access on the container.
                        Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                      x-kubernetes-int-or-string: true
                  required:
                  - port
                  type: object
                timeoutSeconds:
                  description: 'Number of seconds after which the probe times out.
                    Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                  format: int32
                  type: integer
              type: object
            replicas:
              format: int32
              type: integer
            resourceRequirements:
              description: ResourceRequirements describes the compute resource requirements.
              properties:
                limits:
                  additionalProperties:
                    type: string
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    type: string
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            restartPolicy:
              description: RestartPolicy describes how the container should be restarted.
                Only one of the following restart policies may be specified. If none
                of the following policies is specified, the default one is RestartPolicyAlways.
              enum:
              - Always
              - OnFailure
              - Never
              type: string
            restartStrategy:
              enum:
              - Recreate
              - RollingUpdate
              type: string
            runnerPermission:
              properties:
                roleType:
                  type: string
                rules:
                  items:
                    description: PolicyRule holds information that describes a policy
                      rule, but does not contain information about who the rule applies
                      to or which namespace the rule applies to.
                    properties:
                      apiGroups:
                        description: APIGroups is the name of the APIGroup that contains
                          the resources.  If multiple API groups are specified, any
                          action requested against one of the enumerated resources
                          in any API group will be allowed.
                        items:
                          type: string
                        type: array
                      nonResourceURLs:
                        description: NonResourceURLs is a set of partial urls that
                          a user should have access to.  *s are allowed, but only
                          as the full, final step in the path Since non-resource URLs
                          are not namespaced, this field is only applicable for ClusterRoles
                          referenced from a ClusterRoleBinding. Rules can either apply
                          to API resources (such as "pods" or "secrets") or non-resource
                          URL paths (such as "/api"),  but not both.
                        items:
                          type: string
                        type: array
                      resourceNames:
                        description: ResourceNames is an optional white list of names
                          that the rule applies to.  An empty set means that everything
                          is allowed.
                        items:
                          type: string
                        type: array
                      resources:
                        description: Resources is a list of resources this rule applies
                          to.  ResourceAll represents all resources.
                        items:
                          type: string
                        type: array
                      verbs:
                        description: Verbs is a list of Verbs that apply to ALL the
                          ResourceKinds and AttributeRestrictions contained in this
                          rule.  VerbAll represents all kinds.
                        items:
                          type: string
                        type: array
                    required:
                    - verbs
                    type: object
                  type: array
              required:
              - roleType
              - rules
              type: object
            schedule:
              type: string
            startAfterComponents:
              items:
                type: string
              type: array
            terminationGracePeriodSeconds:
              format: int64
              type: integer
            volumes:
              items:
                properties:
                  hostPath:
                    type: string
                  path:
                    description: the path we use to mount this volume to container
                    type: string
                  pvToMatch:
                    description: instead of auto-provision new PV using StorageClass
                      we try to re-use existing PV
                    type: string
                  pvc:
                    description: "use to store pvc name, so the disk won't be recreate
                      during restart This field also can be used with existing pvc
                      \n for Type: pvc, required, todo validate this in webhook?"
                    type: string
                  size:
                    description: If we need to create this volume first, the size
                      of the volume
                    type: string
                  storageClassName:
                    description: Identify the StorageClass to create the pvc
                    type: string
                  type:
                    description: Volume type
                    enum:
                    - emptyDirMemory
                    - emptyDir
                    - pvc
                    - pvcTemplate
                    - hostpath
                    type: string
                required:
                - path
                - size
                type: object
              type: array
            workloadType:
              allOf:
              - enum:
                - server
                - cronjob
                - daemonset
                - statefulset
              - enum:
                - server
                - cronjob
                - statefulset
                - daemonset
              type: string
          required:
          - image
          type: object
        status:
          description: ComponentStatus defines the observed state of Component
          properties:
            replicas:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying
                this file'
              format: int32
              type: integer
            selector:
              type: string
          required:
          - replicas
          - selector
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
